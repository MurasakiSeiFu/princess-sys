logging.level.root=INFO

#数据库连接信息
spring.datasource.druid.url=jdbc:mysql://127.0.0.1:3306/princess_sys?serverTimezone=Asia/Shanghai&useUnicode=true&characterEncoding=utf-8&useSSL=false&allowMultiQueries=true
spring.datasource.druid.username=root
spring.datasource.druid.password=123456

#属性类型是字符串，通过别名的方式配置扩展插件常用的插件有：监控统计用的filter:stat 日志用的filter:log4j 防御sql注入的filter:wall
spring.datasource.druid.filters=stat
#初始化时建立物理连接的个数。初始化发生在显示调用init方法，或者第一次getConnection时
spring.datasource.druid.initialSize=5
#最小连接池数量
spring.datasource.druid.minIdle=5
#最大连接池数量
spring.datasource.druid.maxActive=10
##有两个含义：1) Destroy线程会检测连接的间隔时间 2) testWhileIdle的判断依据，详细看testWhileIdle属性的说明
#timeBetweenEvictionRunsMillis=20000
##配置一个连接在池中最小生存的时间，单位是毫秒
#minEvictableIdleTimeMillis=300000
#用来检测连接是否有效的sql，要求是一个查询语句 如果validationQuery为null，testOnBorrow、testOnReturn、testWhileIdle都不会其作用。
spring.datasource.druid.validationQuery=SELECT '1' FROM DUAL
#建议配置为true，不影响性能，并且保证安全性。申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis 执行validationQuery检测连接是否有效
spring.datasource.druid.testWhileIdle=true
#申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。
spring.datasource.druid.testOnBorrow=false
#归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能
spring.datasource.druid.testOnReturn=false
#要启用PSCache，必须配置大于0，当大于0时，poolPreparedStatements自动触发修改为true。 在Druid中，不会存在Oracle下PSCache占用内存过多的问题 可以把这个数值配置大一些，比如说100
spring.datasource.druid.maxOpenPreparedStatements=100
#关闭 abanded 连接时输出错误日志
spring.datasource.druid.logAbandoned=true

#mybatis配置
mybatis.type-aliases-package=little.princess.sys.manager.core.entity
mybatis.mapper-locations=classpath:mapper/*.xml

spring.banner.location=classpath:banner.txt